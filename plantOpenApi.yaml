openapi: '3.0.2'
info:
  title: Don't Starve Together Crops
  description: 'This is a sample DST crop server.'
  termsOfService: https://dontstarve.fandom.com/wiki/Farm_Plant
  contact:
    email: jondoe@gmail.com
  version: '1.0'
servers:
  - url: https://localhost:8080/v1
tags:
  - name: plants
    description: Everything about DST crops
paths:
  /plants:
    get:
      tags:
        - plants
      summary: Find all plants
      operationId: findAllPlants
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
    post:
      tags:
        - plants
      summary: "Add a plant"
      requestBody:
        description: Plant object that needs to be added
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Plant"
          application/json:
            schema:
              $ref: "#/components/schemas/Plant"
        required: true
      responses:
        405:
          description: Invalid input
  /plants/findBySeason:
    get:
      tags:
        - plants
      summary: Finds Plants by season
      parameters:
        - name: season
          in: query
          description: Season name that need to be considered for filter
          required: true
          style: form
          explode: true
          schema:
            type: string
            default: autumn
            enum:
              - autumn
              - spring
              - summer
              - winter
      responses:
        200:
          description: successful operation
          content:
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Plant'
        400:
          description: Invalid status value
          content: {}
  /plants/{plantId}:
    get:
      tags:
        - plants
      summary: Find plant by ID
      description: "Returns a single plant"
      operationId: "getPlantById"
      parameters:
        - name: plantId
          in: path
          description: "ID of plant to return"
          required: true
          schema:
            type: "integer"
            format: "int64"
      responses:
        "200":
          description: "successful operation"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Plant"
        "400":
          description: "Invalid ID supplied"
        "404":
          description: "Plant not found"
    put:
      tags:
        - plants
      summary: "Update a plant with the specified id"
      parameters:
        - name: plantId
          in: path
          description: ID of plant to be updated
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/Plant"
          application/json:
            schema:
              $ref: "#/components/schemas/Plant"
      responses:
        405:
          description: Invalid input
    delete:
      tags:
        - plants
      summary: Deletes a plant
      operationId: deletePlant
      parameters:
        - name: plantId
          in: path
          description: Plant id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        400:
          description: Invalid ID supplied
          content: {}
        404:
          description: Plant not found
          content: {}
components:
  schemas:
    Plant:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        seasons:
          type: array
          items:
            type: string
            enum:
              - autumn
              - winter
              - spring
              - summer
        seedName:
          type: string